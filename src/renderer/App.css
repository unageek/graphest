@media (prefers-color-scheme: light) {
  :root {
    --theme-primary: #0078d4;
    --theme-light: #c7e0f4;
    --neutral-lighter: #f3f2f1;
    --neutral-light: #edebe9;
    --neutral-quaternary: #d0d0d0;
    --neutral-tertiary: #a19f9d;
    --neutral-primary: #323130;
    --white: #ffffff;
    --red-dark: #a4262c;

    /* https://tailwindcolor.com/ */
    --error-background: #fee2e2; /* red-100 */
    --syntax-error: #a21caf; /* fuchsia-700 */
    --implicit-multiplication: silver;
    --highlight: greenyellow;
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    --theme-primary: #2899f5;
    --theme-light: #0c2e49;
    --neutral-lighter: #2f2d2c;
    --neutral-light: #3d3b39;
    --neutral-quaternary: #4d4b49;
    --neutral-tertiary: #c8c8c8;
    --neutral-primary: #ffffff;
    --white: #1b1a19;
    --red-dark: #f1707b;

    /* https://tailwindcolor.com/ */
    --error-background: #7f1d1d; /* red-900 */
    --syntax-error: #f0abfc; /* fuchsia-300 */
    --implicit-multiplication: gray;
    --highlight: rgb(100, 167, 0);
  }
}

html,
body,
#app {
  height: 100%;
}

body {
  margin: 0;
}

:not(input):not(textarea) {
  user-select: none;
}

a:not([draggable]) {
  -webkit-user-drag: none;
}

.leaflet-bar {
  border: 1px solid var(--neutral-quaternary) !important;
  border-radius: 3px !important;
  box-shadow: 0 1.6px 3.6px 0 rgba(0, 0, 0, 0.132),
    0 0.3px 0.9px 0 rgba(0, 0, 0, 0.108) !important; /* depth8 */
  opacity: 0.75;
}

.leaflet-bar:hover,
.leaflet-bar:focus-within {
  opacity: 1;
}

.leaflet-control-zoom-in {
  border-bottom: 1px solid var(--neutral-quaternary) !important;
}

.leaflet-bar a /* Zoom buttons */,
.leaflet-bar button /* Reset view button */ {
  background: var(--white) !important;
  color: var(--neutral-primary) !important;
}

.leaflet-bar a.leaflet-disabled /* Zoom buttons */ {
  background: var(--neutral-lighter) !important;
  color: var(--neutral-tertiary) !important;
}

.leaflet-bar a:hover:not(.leaflet-disabled),
.leaflet-bar button:hover {
  background: var(--neutral-lighter) !important;
}

.leaflet-bar a:active:not(.leaflet-disabled),
.leaflet-bar button:active {
  background: var(--neutral-light) !important;
}

.leaflet-bar a:first-child /* Zoom in button*/,
.leaflet-bar button /* Reset view button */ {
  border-top-left-radius: 2px !important;
  border-top-right-radius: 2px !important;
}

.leaflet-bar a:last-child /* Zoom out button */,
.leaflet-bar button /* Reset view button */ {
  border-bottom-left-radius: 2px !important;
  border-bottom-right-radius: 2px !important;
}

.leaflet-layer {
  image-rendering: pixelated;
}

/* Scaled tiles */
.leaflet-tile-container:not([style$="scale(1);"]) {
  filter: blur(0.5px);
  opacity: 0.5;
}

.relation-input-outer {
  --indicator-width: 3px;
  align-items: stretch;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 2px 8px 2px calc(8px + var(--indicator-width));
  position: relative;
}

.relation-input-outer::before {
  border-radius: calc(var(--indicator-width) / 2);
  bottom: 4px;
  content: "";
  left: 0;
  position: absolute;
  top: 4px;
  transition: background-color 50ms;
  width: var(--indicator-width);
}

.relation-input-outer.has-error::before {
  background-color: var(--red-dark);
}

@keyframes processing {
  from {
    background-color: var(--theme-light);
  }
  to {
    background-color: var(--theme-primary);
  }
}

.relation-input-outer.processing::before {
  animation: processing 1s infinite alternate linear;
}

.relation-input {
  font-family: "DejaVu Mono";
  font-size: 16px;
  line-height: 1.5;
  /* Use a fractional number of lines to help the user recognize the overflow. */
  max-height: calc(5.5 * (1.5 * 16px));
  overflow-y: auto;
  word-spacing: -0.25ch;
}

.relation-input:focus span.highlighted-left-bracket::before,
.relation-input:focus span.highlighted-right-bracket::before {
  background-color: var(--highlight);
  color: transparent;
  margin-right: -1ch;
}

.relation-input:focus span.highlighted-left-bracket::before {
  border-radius: 0.5ch 0 0 0.5ch / 50% 0 0 50%;
  /* Prevent the pseudo-element from affecting line break. */
  content: "(\2060";
}

.relation-input:focus span.highlighted-right-bracket::before {
  border-radius: 0 0.5ch 0.5ch 0 / 0 50% 50% 0;
  content: ")\2060";
}

.relation-input span.multiplication-container {
  /* Create a new stacking content. */
  position: relative;
  z-index: 0;
}

.relation-input span.multiplication {
  word-spacing: 0.5ch;
}

.relation-input span.multiplication::before {
  color: var(--implicit-multiplication);
  content: "Ã—";
  margin-left: 0.25ch;
  position: absolute;
  z-index: -1;
}

.relation-input span.syntax-error {
  color: var(--syntax-error); /* theme.palette.magenta */
}

.relation-input span.validation-error {
  background-color: var(--error-background);
}

.relation-input
  span.validation-error-after
  > span[data-slate-zero-width="n"]
  > br {
  /*
   * Hide the <br> in:
   * https://github.com/ianstormtaylor/slate/blob/fece5c157099b5ddef9f6dc8d070f2fdb3724b90/packages/slate-react/src/components/string.tsx#L91
   */
  display: none;
}

.relation-input span.validation-error-after::after {
  background-color: var(--error-background);
  content: " ";
  word-spacing: normal;
}

.relation-input-error-message {
  color: var(--red-dark);
}

/* HACK: Properly align Fluent UI's SVG icons. */

.ms-Dropdown-caretDownWrapper {
  height: 100% !important;
  padding-top: unset !important;
}

i {
  height: 100%;
}

.fluent-ui-icon {
  display: flex !important;
  height: 100%;
}
