name: build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  rust:
    runs-on: ubuntu-latest

    env:
      CARGO_TERM_COLOR: always
      RUSTDOCFLAGS: -Ctarget-cpu=haswell
      RUSTFLAGS: -Ctarget-cpu=haswell

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/gmp-mpfr-sys
            ~/.cache/graphest-arb-sys
          key: ${{ runner.os }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('rust/Cargo.lock', 'rust/build.rs') }}
          restore-keys: |
            ${{ runner.os }}-${{ secrets.CACHE_VERSION }}-

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy, rustfmt
          profile: minimal

      - uses: Swatinem/rust-cache@v1

      - name: Run tests (--no-default-features)
        run: cargo test --release --no-default-features -- -Zunstable-options --report-time

      - name: Run tests
        run: cargo test --release -- -Zunstable-options --report-time

      - name: Clippy (--no-default-features)
        run: cargo clippy --all-targets --no-default-features -- -Dwarnings

      - name: Clippy
        run: cargo clippy --all-targets -- -Dwarnings

      - name: Check format
        run: cargo fmt -- --check

      - name: Check docs
        run: cargo doc --document-private-items
        env:
          RUSTDOCFLAGS: ${{ env.RUSTDOCFLAGS }} -Arustdoc::private_intra_doc_links -Dwarnings

  app:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 10.x

      - run: npm ci

      - run: npm run build:app
        env:
          NODE_ENV: production

      #- run: npm test

      - run: npm run lint
